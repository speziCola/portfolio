{"version":3,"sources":["webpack:///./src/images/qrt-ck.png","webpack:///./src/pages/index.js","webpack:///./src/constants/index.js","webpack:///./src/components/seo.js"],"names":["module","exports","IndexPage","title","keywords","className","src","avatar","alt","SEO","description","meta","lang","query","detailsQuery","render","data","metaDescription","site","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,sD,mJCoC5BC,UAvBG,kBAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,OAAOC,SAAU,CAAC,SAAD,yBAC5B,kBAAC,IAAD,MACA,yBAAKC,UAAU,sBACb,yBAAKA,UAAU,+BACf,yBAAKA,UAAU,6BAA6BC,IAAKC,IAAQC,IAAI,kCAC3D,wBAAIH,UAAU,gCAAd,uBCpBY,IDoBZ,SACgC,6BADhC,MCpBY,IDoBZ,uCAE6C,0BAAMA,UAAU,sCAAhB,MAE7C,uBAAGA,UAAU,+BAAb,oNAQJ,kBAAC,IAAD,S,2RE3BJ,SAASI,EAAT,GAA4D,IAA7CC,EAA4C,EAA5CA,YAAmBC,GAAyB,EAA/BC,KAA+B,EAAzBD,MAAMP,EAAmB,EAAnBA,SAAUD,EAAS,EAATA,MAChD,OACE,kBAAC,cAAD,CACEU,MAAOC,EACPC,OAAQ,SAAAC,GACN,IAAMC,EACJP,GAAeM,EAAKE,KAAKC,aAAaT,YACxC,OACE,kBAAC,IAAD,CACEU,eAAgB,CACdR,KAAK,MAEPT,MAAOA,EACPkB,cAAa,QAAUL,EAAKE,KAAKC,aAAahB,MAC9CQ,KAAM,CACJ,CACEW,KAAK,cACLC,QAASN,GAEX,CACEO,SAAS,WACTD,QAASpB,GAEX,CACEqB,SAAS,iBACTD,QAASN,GAEX,CACEO,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASP,EAAKE,KAAKC,aAAaM,QAElC,CACEH,KAAK,gBACLC,QAASpB,GAEX,CACEmB,KAAK,sBACLC,QAASN,IAGVS,OACCtB,EAASuB,OAAS,EACd,CACEL,KAAK,WACLC,QAASnB,EAASwB,KAAT,OAEX,IAELF,OAAOf,MAtDlB,SA8DJF,EAAIoB,aAAe,CACjBjB,KAAK,KACLD,KAAM,GACNP,SAAU,IAWGK,MAEf,IAAMK,EAAY","file":"component---src-pages-index-js-f026f46fd7c1ba384fe5.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/qrt-ck-931a84bf01d62fb988290675c7ad424b.png\";","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { NBSP } from '../constants';\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport Navbar from '../components/navbar';\nimport Footer from '../components/footer';\n\nimport avatar from '../../src/images/qrt-ck.png';\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n    <Navbar></Navbar>\n    <div className=\"ck_start_container\">\n      <div className=\"ck_start_container__wrapper\">\n      <img className=\"ck_start_container__avatar\" src={avatar} alt=\"Chris Kuhrt, porfile picture.\" />\n        <h1 className=\"ck_start_container__headline\">\n        Hi, my name is Chris{NBSP}Kuhrt.<br />\n        I’m{NBSP}a Product Designer based in Germany.<span className=\"ck_start_container__headline__line\">_</span>\n        </h1>\n        <p className=\"ck_start_container__subtext\">\n          Starting to explore the internet in the early 2000s I discovered\n          digital media design. Since then, I’ve worked for serveral clients. I always strive to create\n          new or better customer experience with empathy.\n        </p>\n      {/*   Button here */}\n      </div>\n    </div>\n    <Footer></Footer>\n  </Layout>\n)\n\nexport default IndexPage\n","export const NBSP = '\\u00A0';","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang: `en`,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}